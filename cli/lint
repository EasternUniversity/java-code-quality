#!/bin/bash

# Linting script, designed to provide linting information for Java files according to Google's format style.
# https://github.com/EasternUniversity/java-code-quality

# Initialize variables
data_dir=/opt/java-code-quality/
ignore_non_java=0
recursive=0

# Process any command line options
# Code stolen from https://linuxconfig.org/bash-script-flags-usage-with-arguments-examples
while getopts 'hvfr?' OPTION; do
	case "$OPTION" in
		h)
			cat $data_dir/docs/lint.txt
			exit 0
			;;
        v)
            echo -e "Current version of java-code-quality: $(cat $data_dir/version)"
            echo "See the GitHub page for more information: https://github.com/EasternUniversity/java-code-quality"
            exit 0
            ;;
        f)
            ignore_non_java=1
            ;;
        r)
            recursive=1
            ;;
		?)
			echo "Usage: format <optional arguments> [Java file]"
			exit 1
			;;
	esac
done
# Shift argument indices to account for any options (e.g. with a flag present, $2 becomes $1)
shift "$(($OPTIND -1))"


# If the file doesn't exist, exit
if [[ ! -e $1 ]];
then
    echo "'$1' does not exist."
    exit 1
fi

# If it's a directory, make sure -r is present. If it's a file, make sure it's .java
if [[ -d $1 ]];
then
    if [[ $recursive == 0 ]];
    then
        echo "'$1' is a directory. To recursively lint all files in a directory, use the -r flag."
        exit 1
    fi
else
    if [[ $1 != *.java && $ignore_non_java == 0 ]];
    then
        echo "Omitting $1 as it is not a .java file. To force linting non-Java files, use the -f flag."
        exit 1
    fi
fi

java -jar $data_dir/checkstyle.jar \
    -c $data_dir/google_checks.xml \
    $1
